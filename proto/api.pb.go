// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordType int32

const (
	RecordType_UNKNOWN RecordType = 0
	RecordType_LOGIN   RecordType = 1
	RecordType_CARD    RecordType = 2
	RecordType_NOTE    RecordType = 3
	RecordType_BINARY  RecordType = 4
)

// Enum value maps for RecordType.
var (
	RecordType_name = map[int32]string{
		0: "UNKNOWN",
		1: "LOGIN",
		2: "CARD",
		3: "NOTE",
		4: "BINARY",
	}
	RecordType_value = map[string]int32{
		"UNKNOWN": 0,
		"LOGIN":   1,
		"CARD":    2,
		"NOTE":    3,
		"BINARY":  4,
	}
)

func (x RecordType) Enum() *RecordType {
	p := new(RecordType)
	*p = x
	return p
}

func (x RecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[0].Descriptor()
}

func (RecordType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[0]
}

func (x RecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordType.Descriptor instead.
func (RecordType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

type RecordMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,7,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"` // server-side ID of the record
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	EncryptedKey  []byte                 `protobuf:"bytes,3,opt,name=encrypted_key,json=encryptedKey,proto3" json:"encrypted_key,omitempty"`
	Alg           string                 `protobuf:"bytes,4,opt,name=alg,proto3" json:"alg,omitempty"`
	Type          RecordType             `protobuf:"varint,5,opt,name=type,proto3,enum=api.RecordType" json:"type,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,6,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"` // encrypted chunk size (bytes); 1 message = 1 chunk
	RequestId     string                 `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`  // idempotency key (UUID)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordMetadata) Reset() {
	*x = RecordMetadata{}
	mi := &file_proto_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordMetadata) ProtoMessage() {}

func (x *RecordMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordMetadata.ProtoReflect.Descriptor instead.
func (*RecordMetadata) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *RecordMetadata) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *RecordMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RecordMetadata) GetEncryptedKey() []byte {
	if x != nil {
		return x.EncryptedKey
	}
	return nil
}

func (x *RecordMetadata) GetAlg() string {
	if x != nil {
		return x.Alg
	}
	return ""
}

func (x *RecordMetadata) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_UNKNOWN
}

func (x *RecordMetadata) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *RecordMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *RecordMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	EncryptedData []byte                 `protobuf:"bytes,2,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordRequest) Reset() {
	*x = CreateRecordRequest{}
	mi := &file_proto_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordRequest) ProtoMessage() {}

func (x *CreateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRecordRequest) GetMetadata() *RecordMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateRecordRequest) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

type CreateRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordResponse) Reset() {
	*x = CreateRecordResponse{}
	mi := &file_proto_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordResponse) ProtoMessage() {}

func (x *CreateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRecordResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *CreateRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateRecordResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CreateRecordStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*CreateRecordStreamRequest_Metadata
	//	*CreateRecordStreamRequest_DataChunk
	Request       isCreateRecordStreamRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordStreamRequest) Reset() {
	*x = CreateRecordStreamRequest{}
	mi := &file_proto_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordStreamRequest) ProtoMessage() {}

func (x *CreateRecordStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordStreamRequest.ProtoReflect.Descriptor instead.
func (*CreateRecordStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRecordStreamRequest) GetRequest() isCreateRecordStreamRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CreateRecordStreamRequest) GetMetadata() *RecordMetadata {
	if x != nil {
		if x, ok := x.Request.(*CreateRecordStreamRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *CreateRecordStreamRequest) GetDataChunk() []byte {
	if x != nil {
		if x, ok := x.Request.(*CreateRecordStreamRequest_DataChunk); ok {
			return x.DataChunk
		}
	}
	return nil
}

type isCreateRecordStreamRequest_Request interface {
	isCreateRecordStreamRequest_Request()
}

type CreateRecordStreamRequest_Metadata struct {
	Metadata *RecordMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type CreateRecordStreamRequest_DataChunk struct {
	DataChunk []byte `protobuf:"bytes,2,opt,name=data_chunk,json=dataChunk,proto3,oneof"`
}

func (*CreateRecordStreamRequest_Metadata) isCreateRecordStreamRequest_Request() {}

func (*CreateRecordStreamRequest_DataChunk) isCreateRecordStreamRequest_Request() {}

type CreateRecordStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	BytesReceived int64                  `protobuf:"varint,4,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordStreamResponse) Reset() {
	*x = CreateRecordStreamResponse{}
	mi := &file_proto_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordStreamResponse) ProtoMessage() {}

func (x *CreateRecordStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordStreamResponse.ProtoReflect.Descriptor instead.
func (*CreateRecordStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRecordStreamResponse) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *CreateRecordStreamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateRecordStreamResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateRecordStreamResponse) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

type ListRecordsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TypeFilter     RecordType             `protobuf:"varint,1,opt,name=type_filter,json=typeFilter,proto3,enum=api.RecordType" json:"type_filter,omitempty"`
	PageSize       int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken      string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	UpdatedAfter   int64                  `protobuf:"varint,4,opt,name=updated_after,json=updatedAfter,proto3" json:"updated_after,omitempty"`       // optional: server timestamp to request delta
	IncludeDeleted bool                   `protobuf:"varint,5,opt,name=include_deleted,json=includeDeleted,proto3" json:"include_deleted,omitempty"` // optional: include tombstones for deletions
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListRecordsRequest) Reset() {
	*x = ListRecordsRequest{}
	mi := &file_proto_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecordsRequest) ProtoMessage() {}

func (x *ListRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecordsRequest.ProtoReflect.Descriptor instead.
func (*ListRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListRecordsRequest) GetTypeFilter() RecordType {
	if x != nil {
		return x.TypeFilter
	}
	return RecordType_UNKNOWN
}

func (x *ListRecordsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRecordsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRecordsRequest) GetUpdatedAfter() int64 {
	if x != nil {
		return x.UpdatedAfter
	}
	return 0
}

func (x *ListRecordsRequest) GetIncludeDeleted() bool {
	if x != nil {
		return x.IncludeDeleted
	}
	return false
}

type Tombstone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	DeletedAt     int64                  `protobuf:"varint,2,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` // server timestamp of deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tombstone) Reset() {
	*x = Tombstone{}
	mi := &file_proto_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tombstone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tombstone) ProtoMessage() {}

func (x *Tombstone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tombstone.ProtoReflect.Descriptor instead.
func (*Tombstone) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *Tombstone) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *Tombstone) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type ListRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*RecordMetadata      `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	ServerTime    int64                  `protobuf:"varint,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // server timestamp to set next last_sync_at
	Tombstones    []*Tombstone           `protobuf:"bytes,4,rep,name=tombstones,proto3" json:"tombstones,omitempty"`                    // deletions since updated_after
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRecordsResponse) Reset() {
	*x = ListRecordsResponse{}
	mi := &file_proto_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRecordsResponse) ProtoMessage() {}

func (x *ListRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRecordsResponse.ProtoReflect.Descriptor instead.
func (*ListRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *ListRecordsResponse) GetRecords() []*RecordMetadata {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ListRecordsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListRecordsResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *ListRecordsResponse) GetTombstones() []*Tombstone {
	if x != nil {
		return x.Tombstones
	}
	return nil
}

type GetRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordRequest) Reset() {
	*x = GetRecordRequest{}
	mi := &file_proto_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordRequest) ProtoMessage() {}

func (x *GetRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordRequest.ProtoReflect.Descriptor instead.
func (*GetRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecordRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type GetRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *RecordMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	EncryptedData []byte                 `protobuf:"bytes,2,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordResponse) Reset() {
	*x = GetRecordResponse{}
	mi := &file_proto_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordResponse) ProtoMessage() {}

func (x *GetRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordResponse.ProtoReflect.Descriptor instead.
func (*GetRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecordResponse) GetMetadata() *RecordMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetRecordResponse) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *GetRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetRecordResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetRecordStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordStreamRequest) Reset() {
	*x = GetRecordStreamRequest{}
	mi := &file_proto_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordStreamRequest) ProtoMessage() {}

func (x *GetRecordStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordStreamRequest.ProtoReflect.Descriptor instead.
func (*GetRecordStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetRecordStreamRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type GetRecordStreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*GetRecordStreamResponse_Metadata
	//	*GetRecordStreamResponse_DataChunk
	Response      isGetRecordStreamResponse_Response `protobuf_oneof:"response"`
	IsLastChunk   bool                               `protobuf:"varint,3,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"`
	ErrorMessage  string                             `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordStreamResponse) Reset() {
	*x = GetRecordStreamResponse{}
	mi := &file_proto_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordStreamResponse) ProtoMessage() {}

func (x *GetRecordStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordStreamResponse.ProtoReflect.Descriptor instead.
func (*GetRecordStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetRecordStreamResponse) GetResponse() isGetRecordStreamResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetRecordStreamResponse) GetMetadata() *RecordMetadata {
	if x != nil {
		if x, ok := x.Response.(*GetRecordStreamResponse_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *GetRecordStreamResponse) GetDataChunk() []byte {
	if x != nil {
		if x, ok := x.Response.(*GetRecordStreamResponse_DataChunk); ok {
			return x.DataChunk
		}
	}
	return nil
}

func (x *GetRecordStreamResponse) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

func (x *GetRecordStreamResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type isGetRecordStreamResponse_Response interface {
	isGetRecordStreamResponse_Response()
}

type GetRecordStreamResponse_Metadata struct {
	Metadata *RecordMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type GetRecordStreamResponse_DataChunk struct {
	DataChunk []byte `protobuf:"bytes,2,opt,name=data_chunk,json=dataChunk,proto3,oneof"`
}

func (*GetRecordStreamResponse_Metadata) isGetRecordStreamResponse_Response() {}

func (*GetRecordStreamResponse_DataChunk) isGetRecordStreamResponse_Response() {}

type DeleteRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordRequest) Reset() {
	*x = DeleteRecordRequest{}
	mi := &file_proto_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordRequest) ProtoMessage() {}

func (x *DeleteRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRecordRequest) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type DeleteRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordResponse) Reset() {
	*x = DeleteRecordResponse{}
	mi := &file_proto_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordResponse) ProtoMessage() {}

func (x *DeleteRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteRecordResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_proto_api_proto protoreflect.FileDescriptor

const file_proto_api_proto_rawDesc = "" +
	"\n" +
	"\x0fproto/api.proto\x12\x03api\"\xfd\x01\n" +
	"\x0eRecordMetadata\x12\x1b\n" +
	"\trecord_id\x18\a \x01(\tR\brecordId\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12#\n" +
	"\rencrypted_key\x18\x03 \x01(\fR\fencryptedKey\x12\x10\n" +
	"\x03alg\x18\x04 \x01(\tR\x03alg\x12#\n" +
	"\x04type\x18\x05 \x01(\x0e2\x0f.api.RecordTypeR\x04type\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x06 \x01(\x03R\tchunkSize\x12\x1d\n" +
	"\n" +
	"request_id\x18\b \x01(\tR\trequestId\"m\n" +
	"\x13CreateRecordRequest\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.api.RecordMetadataR\bmetadata\x12%\n" +
	"\x0eencrypted_data\x18\x02 \x01(\fR\rencryptedData\"r\n" +
	"\x14CreateRecordResponse\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"z\n" +
	"\x19CreateRecordStreamRequest\x121\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.api.RecordMetadataH\x00R\bmetadata\x12\x1f\n" +
	"\n" +
	"data_chunk\x18\x02 \x01(\fH\x00R\tdataChunkB\t\n" +
	"\arequest\"\x9f\x01\n" +
	"\x1aCreateRecordStreamResponse\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12%\n" +
	"\x0ebytes_received\x18\x04 \x01(\x03R\rbytesReceived\"\xd0\x01\n" +
	"\x12ListRecordsRequest\x120\n" +
	"\vtype_filter\x18\x01 \x01(\x0e2\x0f.api.RecordTypeR\n" +
	"typeFilter\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12#\n" +
	"\rupdated_after\x18\x04 \x01(\x03R\fupdatedAfter\x12'\n" +
	"\x0finclude_deleted\x18\x05 \x01(\bR\x0eincludeDeleted\"G\n" +
	"\tTombstone\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\x12\x1d\n" +
	"\n" +
	"deleted_at\x18\x02 \x01(\x03R\tdeletedAt\"\xbd\x01\n" +
	"\x13ListRecordsResponse\x12-\n" +
	"\arecords\x18\x01 \x03(\v2\x13.api.RecordMetadataR\arecords\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vserver_time\x18\x03 \x01(\x03R\n" +
	"serverTime\x12.\n" +
	"\n" +
	"tombstones\x18\x04 \x03(\v2\x0e.api.TombstoneR\n" +
	"tombstones\"/\n" +
	"\x10GetRecordRequest\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\"\xaa\x01\n" +
	"\x11GetRecordResponse\x12/\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.api.RecordMetadataR\bmetadata\x12%\n" +
	"\x0eencrypted_data\x18\x02 \x01(\fR\rencryptedData\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"5\n" +
	"\x16GetRecordStreamRequest\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\"\xc2\x01\n" +
	"\x17GetRecordStreamResponse\x121\n" +
	"\bmetadata\x18\x01 \x01(\v2\x13.api.RecordMetadataH\x00R\bmetadata\x12\x1f\n" +
	"\n" +
	"data_chunk\x18\x02 \x01(\fH\x00R\tdataChunk\x12\"\n" +
	"\ris_last_chunk\x18\x03 \x01(\bR\visLastChunk\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessageB\n" +
	"\n" +
	"\bresponse\"2\n" +
	"\x13DeleteRecordRequest\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\"U\n" +
	"\x14DeleteRecordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage*D\n" +
	"\n" +
	"RecordType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05LOGIN\x10\x01\x12\b\n" +
	"\x04CARD\x10\x02\x12\b\n" +
	"\x04NOTE\x10\x03\x12\n" +
	"\n" +
	"\x06BINARY\x10\x042\xb6\x03\n" +
	"\x03API\x12C\n" +
	"\fCreateRecord\x12\x18.api.CreateRecordRequest\x1a\x19.api.CreateRecordResponse\x12W\n" +
	"\x12CreateRecordStream\x12\x1e.api.CreateRecordStreamRequest\x1a\x1f.api.CreateRecordStreamResponse(\x01\x12@\n" +
	"\vListRecords\x12\x17.api.ListRecordsRequest\x1a\x18.api.ListRecordsResponse\x12:\n" +
	"\tGetRecord\x12\x15.api.GetRecordRequest\x1a\x16.api.GetRecordResponse\x12N\n" +
	"\x0fGetRecordStream\x12\x1b.api.GetRecordStreamRequest\x1a\x1c.api.GetRecordStreamResponse0\x01\x12C\n" +
	"\fDeleteRecord\x12\x18.api.DeleteRecordRequest\x1a\x19.api.DeleteRecordResponseB)Z'github.com/dtroode/gophkeeper-api/protob\x06proto3"

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData []byte
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_api_proto_rawDesc), len(file_proto_api_proto_rawDesc)))
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_api_proto_goTypes = []any{
	(RecordType)(0),                    // 0: api.RecordType
	(*RecordMetadata)(nil),             // 1: api.RecordMetadata
	(*CreateRecordRequest)(nil),        // 2: api.CreateRecordRequest
	(*CreateRecordResponse)(nil),       // 3: api.CreateRecordResponse
	(*CreateRecordStreamRequest)(nil),  // 4: api.CreateRecordStreamRequest
	(*CreateRecordStreamResponse)(nil), // 5: api.CreateRecordStreamResponse
	(*ListRecordsRequest)(nil),         // 6: api.ListRecordsRequest
	(*Tombstone)(nil),                  // 7: api.Tombstone
	(*ListRecordsResponse)(nil),        // 8: api.ListRecordsResponse
	(*GetRecordRequest)(nil),           // 9: api.GetRecordRequest
	(*GetRecordResponse)(nil),          // 10: api.GetRecordResponse
	(*GetRecordStreamRequest)(nil),     // 11: api.GetRecordStreamRequest
	(*GetRecordStreamResponse)(nil),    // 12: api.GetRecordStreamResponse
	(*DeleteRecordRequest)(nil),        // 13: api.DeleteRecordRequest
	(*DeleteRecordResponse)(nil),       // 14: api.DeleteRecordResponse
}
var file_proto_api_proto_depIdxs = []int32{
	0,  // 0: api.RecordMetadata.type:type_name -> api.RecordType
	1,  // 1: api.CreateRecordRequest.metadata:type_name -> api.RecordMetadata
	1,  // 2: api.CreateRecordStreamRequest.metadata:type_name -> api.RecordMetadata
	0,  // 3: api.ListRecordsRequest.type_filter:type_name -> api.RecordType
	1,  // 4: api.ListRecordsResponse.records:type_name -> api.RecordMetadata
	7,  // 5: api.ListRecordsResponse.tombstones:type_name -> api.Tombstone
	1,  // 6: api.GetRecordResponse.metadata:type_name -> api.RecordMetadata
	1,  // 7: api.GetRecordStreamResponse.metadata:type_name -> api.RecordMetadata
	2,  // 8: api.API.CreateRecord:input_type -> api.CreateRecordRequest
	4,  // 9: api.API.CreateRecordStream:input_type -> api.CreateRecordStreamRequest
	6,  // 10: api.API.ListRecords:input_type -> api.ListRecordsRequest
	9,  // 11: api.API.GetRecord:input_type -> api.GetRecordRequest
	11, // 12: api.API.GetRecordStream:input_type -> api.GetRecordStreamRequest
	13, // 13: api.API.DeleteRecord:input_type -> api.DeleteRecordRequest
	3,  // 14: api.API.CreateRecord:output_type -> api.CreateRecordResponse
	5,  // 15: api.API.CreateRecordStream:output_type -> api.CreateRecordStreamResponse
	8,  // 16: api.API.ListRecords:output_type -> api.ListRecordsResponse
	10, // 17: api.API.GetRecord:output_type -> api.GetRecordResponse
	12, // 18: api.API.GetRecordStream:output_type -> api.GetRecordStreamResponse
	14, // 19: api.API.DeleteRecord:output_type -> api.DeleteRecordResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	file_proto_api_proto_msgTypes[3].OneofWrappers = []any{
		(*CreateRecordStreamRequest_Metadata)(nil),
		(*CreateRecordStreamRequest_DataChunk)(nil),
	}
	file_proto_api_proto_msgTypes[11].OneofWrappers = []any{
		(*GetRecordStreamResponse_Metadata)(nil),
		(*GetRecordStreamResponse_DataChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_api_proto_rawDesc), len(file_proto_api_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		EnumInfos:         file_proto_api_proto_enumTypes,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
